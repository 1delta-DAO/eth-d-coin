{"abi":[{"type":"error","name":"ReentrancyGuardReentrantCall","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/erc4626-tests/\",\":ethereum-vault-connector/=lib/ethereum-vault-connector/\",\":evc-playground/=lib/evc-playground/\",\":evc/=lib/ethereum-vault-connector/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"ReentrancyGuardReentrantCall"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/erc4626-tests/","ethereum-vault-connector/=lib/ethereum-vault-connector/","evc-playground/=lib/evc-playground/","evc/=lib/ethereum-vault-connector/src/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/","solmate/=lib/solmate/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol":"ReentrancyGuard"},"libraries":{}},"sources":{"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol":{"keccak256":"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236","urls":["bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02","dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol","id":56280,"exportedSymbols":{"ReentrancyGuard":[56279]},"nodeType":"SourceUnit","src":"109:3131:50","nodes":[{"id":56212,"nodeType":"PragmaDirective","src":"109:24:50","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":56279,"nodeType":"ContractDefinition","src":"886:2353:50","nodes":[{"id":56216,"nodeType":"VariableDeclaration","src":"1674:40:50","nodes":[],"constant":true,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1699:11:50","scope":56279,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":56214,"name":"uint256","nodeType":"ElementaryTypeName","src":"1674:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":56215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1713:1:50","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"id":56219,"nodeType":"VariableDeclaration","src":"1720:36:50","nodes":[],"constant":true,"mutability":"constant","name":"ENTERED","nameLocation":"1745:7:50","scope":56279,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":56217,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":56218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1755:1:50","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"id":56221,"nodeType":"VariableDeclaration","src":"1763:23:50","nodes":[],"constant":false,"mutability":"mutable","name":"_status","nameLocation":"1779:7:50","scope":56279,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":56220,"name":"uint256","nodeType":"ElementaryTypeName","src":"1763:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"id":56224,"nodeType":"ErrorDefinition","src":"1850:37:50","nodes":[],"documentation":{"id":56222,"nodeType":"StructuredDocumentation","src":"1793:52:50","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","name":"ReentrancyGuardReentrantCall","nameLocation":"1856:28:50","parameters":{"id":56223,"nodeType":"ParameterList","parameters":[],"src":"1884:2:50"}},{"id":56232,"nodeType":"FunctionDefinition","src":"1893:52:50","nodes":[],"body":{"id":56231,"nodeType":"Block","src":"1907:38:50","nodes":[],"statements":[{"expression":{"id":56229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":56227,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56221,"src":"1917:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":56228,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56216,"src":"1927:11:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1917:21:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":56230,"nodeType":"ExpressionStatement","src":"1917:21:50"}]},"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":56225,"nodeType":"ParameterList","parameters":[],"src":"1904:2:50"},"returnParameters":{"id":56226,"nodeType":"ParameterList","parameters":[],"src":"1907:0:50"},"scope":56279,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":56243,"nodeType":"ModifierDefinition","src":"2322:103:50","nodes":[],"body":{"id":56242,"nodeType":"Block","src":"2346:79:50","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":56235,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56259,"src":"2356:19:50","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":56236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2356:21:50","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":56237,"nodeType":"ExpressionStatement","src":"2356:21:50"},{"id":56238,"nodeType":"PlaceholderStatement","src":"2387:1:50"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":56239,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56267,"src":"2398:18:50","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":56240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2398:20:50","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":56241,"nodeType":"ExpressionStatement","src":"2398:20:50"}]},"documentation":{"id":56233,"nodeType":"StructuredDocumentation","src":"1951:366:50","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"name":"nonReentrant","nameLocation":"2331:12:50","parameters":{"id":56234,"nodeType":"ParameterList","parameters":[],"src":"2343:2:50"},"virtual":false,"visibility":"internal"},{"id":56259,"nodeType":"FunctionDefinition","src":"2431:307:50","nodes":[],"body":{"id":56258,"nodeType":"Block","src":"2470:268:50","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":56248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":56246,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56221,"src":"2558:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":56247,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56219,"src":"2569:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2558:18:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":56253,"nodeType":"IfStatement","src":"2554:86:50","trueBody":{"id":56252,"nodeType":"Block","src":"2578:62:50","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":56249,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56224,"src":"2599:28:50","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":56250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2599:30:50","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":56251,"nodeType":"RevertStatement","src":"2592:37:50"}]}},{"expression":{"id":56256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":56254,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56221,"src":"2714:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":56255,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56219,"src":"2724:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2714:17:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":56257,"nodeType":"ExpressionStatement","src":"2714:17:50"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2440:19:50","parameters":{"id":56244,"nodeType":"ParameterList","parameters":[],"src":"2459:2:50"},"returnParameters":{"id":56245,"nodeType":"ParameterList","parameters":[],"src":"2470:0:50"},"scope":56279,"stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"id":56267,"nodeType":"FunctionDefinition","src":"2744:208:50","nodes":[],"body":{"id":56266,"nodeType":"Block","src":"2782:170:50","nodes":[],"statements":[{"expression":{"id":56264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":56262,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56221,"src":"2924:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":56263,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56216,"src":"2934:11:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2924:21:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":56265,"nodeType":"ExpressionStatement","src":"2924:21:50"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2753:18:50","parameters":{"id":56260,"nodeType":"ParameterList","parameters":[],"src":"2771:2:50"},"returnParameters":{"id":56261,"nodeType":"ParameterList","parameters":[],"src":"2782:0:50"},"scope":56279,"stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"id":56278,"nodeType":"FunctionDefinition","src":"3131:106:50","nodes":[],"body":{"id":56277,"nodeType":"Block","src":"3195:42:50","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":56275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":56273,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56221,"src":"3212:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":56274,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56219,"src":"3223:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3212:18:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":56272,"id":56276,"nodeType":"Return","src":"3205:25:50"}]},"documentation":{"id":56268,"nodeType":"StructuredDocumentation","src":"2958:168:50","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3140:23:50","parameters":{"id":56269,"nodeType":"ParameterList","parameters":[],"src":"3163:2:50"},"returnParameters":{"id":56272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56271,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":56278,"src":"3189:4:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":56270,"name":"bool","nodeType":"ElementaryTypeName","src":"3189:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3188:6:50"},"scope":56279,"stateMutability":"view","virtual":false,"visibility":"internal"}],"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":56213,"nodeType":"StructuredDocumentation","src":"135:750:50","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"linearizedBaseContracts":[56279],"name":"ReentrancyGuard","nameLocation":"904:15:50","scope":56280,"usedErrors":[56224],"usedEvents":[]}],"license":"MIT"},"id":50}