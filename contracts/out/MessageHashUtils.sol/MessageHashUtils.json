{"abi":[],"bytecode":{"object":"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d6f8cff8bb06a52744cb809f9353d3ba3fe0414b1c5eb3ccca27b7c092accc7964736f6c63430008140033","sourceMap":"521:3235:54:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;521:3235:54;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d6f8cff8bb06a52744cb809f9353d3ba3fe0414b1c5eb3ccca27b7c092accc7964736f6c63430008140033","sourceMap":"521:3235:54:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/erc4626-tests/\",\":ethereum-vault-connector/=lib/ethereum-vault-connector/\",\":evc-playground/=lib/evc-playground/\",\":evc/=lib/ethereum-vault-connector/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/Panic.sol\":{\"keccak256\":\"0x0fe5062075b50bd13e38a5a399299aac3673f4b02a89e14f2bf3c382ee39f754\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://27677c502fdf53d956d7c6974e45a3be600ef0c4c93fd9b75683ae99a03b1a15\",\"dweb:/ipfs/QmWPw6UxStZkkWRGuPBDaa5XSFPUN2JBCdNnCSyut567m9\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x3f1998a2904792ff2a576827876638b4917573186537f878d30b23277a3b8d38\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8dfb08ed617c9d874de901e44ac8af7af7b13e7c84000a1da3cdaf6004593e8\",\"dweb:/ipfs/QmPX2hZAvCZJCQNSXcWqhxh3xp6UitwESrw3K2u3aYNqiu\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x9b84f3bf1dacee512c1445691a789056e9c71f63002fa109e3edc860276feb84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f0f926fdab956f66d6c5e34911eff3464f5d89698ee04810afd6feffb788ecd\",\"dweb:/ipfs/Qmaq22PXW58mvsqQMj1RcsbALRsBRMGnJu37kpvqpsAXHP\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x8cd59334ed58b8884cd1f775afc9400db702e674e5d6a7a438c655b9de788d7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99e62c7de7318f413b6352e3f2704ca23e7725ff144e43c8bd574d12dbf29047\",\"dweb:/ipfs/QmSEXG2rBx1VxU2uFTWdiChjDvA4osEY2mesjmoVeVhHko\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x519e2c9d9c4dfd63311fb98663e55ba465772897cd4a98e3a5406a1f5959811f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4718d121f448f8fce3b28a276fd194014597319a4133696793893ae13c6e512\",\"dweb:/ipfs/QmaQyHiKokgyWq9nREub6xGUAEYiGTiv4caigjGCiWZTjZ\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/erc4626-tests/","ethereum-vault-connector/=lib/ethereum-vault-connector/","evc-playground/=lib/evc-playground/","evc/=lib/ethereum-vault-connector/src/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/","solmate/=lib/solmate/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol":"MessageHashUtils"},"libraries":{}},"sources":{"lib/openzeppelin-contracts/contracts/utils/Address.sol":{"keccak256":"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721","urls":["bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245","dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Panic.sol":{"keccak256":"0x0fe5062075b50bd13e38a5a399299aac3673f4b02a89e14f2bf3c382ee39f754","urls":["bzz-raw://27677c502fdf53d956d7c6974e45a3be600ef0c4c93fd9b75683ae99a03b1a15","dweb:/ipfs/QmWPw6UxStZkkWRGuPBDaa5XSFPUN2JBCdNnCSyut567m9"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Strings.sol":{"keccak256":"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792","urls":["bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453","dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol":{"keccak256":"0x3f1998a2904792ff2a576827876638b4917573186537f878d30b23277a3b8d38","urls":["bzz-raw://a8dfb08ed617c9d874de901e44ac8af7af7b13e7c84000a1da3cdaf6004593e8","dweb:/ipfs/QmPX2hZAvCZJCQNSXcWqhxh3xp6UitwESrw3K2u3aYNqiu"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"keccak256":"0x9b84f3bf1dacee512c1445691a789056e9c71f63002fa109e3edc860276feb84","urls":["bzz-raw://4f0f926fdab956f66d6c5e34911eff3464f5d89698ee04810afd6feffb788ecd","dweb:/ipfs/Qmaq22PXW58mvsqQMj1RcsbALRsBRMGnJu37kpvqpsAXHP"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol":{"keccak256":"0x8cd59334ed58b8884cd1f775afc9400db702e674e5d6a7a438c655b9de788d7e","urls":["bzz-raw://99e62c7de7318f413b6352e3f2704ca23e7725ff144e43c8bd574d12dbf29047","dweb:/ipfs/QmSEXG2rBx1VxU2uFTWdiChjDvA4osEY2mesjmoVeVhHko"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol":{"keccak256":"0x519e2c9d9c4dfd63311fb98663e55ba465772897cd4a98e3a5406a1f5959811f","urls":["bzz-raw://c4718d121f448f8fce3b28a276fd194014597319a4133696793893ae13c6e512","dweb:/ipfs/QmaQyHiKokgyWq9nREub6xGUAEYiGTiv4caigjGCiWZTjZ"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol","id":56936,"exportedSymbols":{"MessageHashUtils":[56935],"Strings":[56861]},"nodeType":"SourceUnit","src":"123:3634:54","nodes":[{"id":56863,"nodeType":"PragmaDirective","src":"123:24:54","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":56865,"nodeType":"ImportDirective","src":"149:39:54","nodes":[],"absolutePath":"lib/openzeppelin-contracts/contracts/utils/Strings.sol","file":"../Strings.sol","nameLocation":"-1:-1:-1","scope":56936,"sourceUnit":56862,"symbolAliases":[{"foreign":{"id":56864,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56861,"src":"157:7:54","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":56935,"nodeType":"ContractDefinition","src":"521:3235:54","nodes":[{"id":56876,"nodeType":"FunctionDefinition","src":"1222:460:54","nodes":[],"body":{"id":56875,"nodeType":"Block","src":"1314:368:54","nodes":[],"statements":[{"AST":{"nodeType":"YulBlock","src":"1376:300:54","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1397:4:54","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"1403:34:54","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1390:6:54"},"nodeType":"YulFunctionCall","src":"1390:48:54"},"nodeType":"YulExpressionStatement","src":"1390:48:54"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1499:4:54","type":"","value":"0x1c"},{"name":"messageHash","nodeType":"YulIdentifier","src":"1505:11:54"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1492:6:54"},"nodeType":"YulFunctionCall","src":"1492:25:54"},"nodeType":"YulExpressionStatement","src":"1492:25:54"},{"nodeType":"YulAssignment","src":"1571:31:54","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1591:4:54","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1597:4:54","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1581:9:54"},"nodeType":"YulFunctionCall","src":"1581:21:54"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"1571:6:54"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":56872,"isOffset":false,"isSlot":false,"src":"1571:6:54","valueSize":1},{"declaration":56869,"isOffset":false,"isSlot":false,"src":"1505:11:54","valueSize":1}],"id":56874,"nodeType":"InlineAssembly","src":"1367:309:54"}]},"documentation":{"id":56867,"nodeType":"StructuredDocumentation","src":"552:665:54","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:54","parameters":{"id":56870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56869,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:54","nodeType":"VariableDeclaration","scope":56876,"src":"1254:19:54","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":56868,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:54","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:54"},"returnParameters":{"id":56873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56872,"mutability":"mutable","name":"digest","nameLocation":"1306:6:54","nodeType":"VariableDeclaration","scope":56876,"src":"1298:14:54","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":56871,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:54","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:54"},"scope":56935,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":56902,"nodeType":"FunctionDefinition","src":"2148:229:54","nodes":[],"body":{"id":56901,"nodeType":"Block","src":"2234:143:54","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":56888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2286:32:54","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":56893,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56879,"src":"2343:7:54","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":56894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2351:6:54","memberName":"length","nodeType":"MemberAccess","src":"2343:14:54","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":56891,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56861,"src":"2326:7:54","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$56861_$","typeString":"type(library Strings)"}},"id":56892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2334:8:54","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":56674,"src":"2326:16:54","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":56895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2326:32:54","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":56890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2320:5:54","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":56889,"name":"bytes","nodeType":"ElementaryTypeName","src":"2320:5:54","typeDescriptions":{}}},"id":56896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:39:54","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":56897,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56879,"src":"2361:7:54","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":56886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2273:5:54","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":56885,"name":"bytes","nodeType":"ElementaryTypeName","src":"2273:5:54","typeDescriptions":{}}},"id":56887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2279:6:54","memberName":"concat","nodeType":"MemberAccess","src":"2273:12:54","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":56898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:96:54","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":56884,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2263:9:54","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":56899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2263:107:54","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":56883,"id":56900,"nodeType":"Return","src":"2244:126:54"}]},"documentation":{"id":56877,"nodeType":"StructuredDocumentation","src":"1688:455:54","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2157:22:54","parameters":{"id":56880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56879,"mutability":"mutable","name":"message","nameLocation":"2193:7:54","nodeType":"VariableDeclaration","scope":56902,"src":"2180:20:54","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":56878,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:54","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2179:22:54"},"returnParameters":{"id":56883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56882,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":56902,"src":"2225:7:54","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":56881,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2225:7:54","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2224:9:54"},"scope":56935,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":56922,"nodeType":"FunctionDefinition","src":"2720:191:54","nodes":[],"body":{"id":56921,"nodeType":"Block","src":"2831:80:54","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":56915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2875:10:54","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":56916,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56905,"src":"2887:9:54","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":56917,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56907,"src":"2898:4:54","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":56913,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2858:3:54","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":56914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2862:12:54","memberName":"encodePacked","nodeType":"MemberAccess","src":"2858:16:54","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":56918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2858:45:54","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":56912,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2848:9:54","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":56919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2848:56:54","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":56911,"id":56920,"nodeType":"Return","src":"2841:63:54"}]},"documentation":{"id":56903,"nodeType":"StructuredDocumentation","src":"2383:332:54","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2729:31:54","parameters":{"id":56908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56905,"mutability":"mutable","name":"validator","nameLocation":"2769:9:54","nodeType":"VariableDeclaration","scope":56922,"src":"2761:17:54","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":56904,"name":"address","nodeType":"ElementaryTypeName","src":"2761:7:54","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":56907,"mutability":"mutable","name":"data","nameLocation":"2793:4:54","nodeType":"VariableDeclaration","scope":56922,"src":"2780:17:54","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":56906,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:54","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2760:38:54"},"returnParameters":{"id":56911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56910,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":56922,"src":"2822:7:54","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":56909,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2822:7:54","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2821:9:54"},"scope":56935,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":56934,"nodeType":"FunctionDefinition","src":"3353:401:54","nodes":[],"body":{"id":56933,"nodeType":"Block","src":"3462:292:54","nodes":[],"statements":[{"AST":{"nodeType":"YulBlock","src":"3524:224:54","statements":[{"nodeType":"YulVariableDeclaration","src":"3538:22:54","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3555:4:54","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3549:5:54"},"nodeType":"YulFunctionCall","src":"3549:11:54"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"3542:3:54","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3580:3:54"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"3585:10:54","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3573:6:54"},"nodeType":"YulFunctionCall","src":"3573:23:54"},"nodeType":"YulExpressionStatement","src":"3573:23:54"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3620:3:54"},{"kind":"number","nodeType":"YulLiteral","src":"3625:4:54","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3616:3:54"},"nodeType":"YulFunctionCall","src":"3616:14:54"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"3632:15:54"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3609:6:54"},"nodeType":"YulFunctionCall","src":"3609:39:54"},"nodeType":"YulExpressionStatement","src":"3609:39:54"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3672:3:54"},{"kind":"number","nodeType":"YulLiteral","src":"3677:4:54","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3668:3:54"},"nodeType":"YulFunctionCall","src":"3668:14:54"},{"name":"structHash","nodeType":"YulIdentifier","src":"3684:10:54"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3661:6:54"},"nodeType":"YulFunctionCall","src":"3661:34:54"},"nodeType":"YulExpressionStatement","src":"3661:34:54"},{"nodeType":"YulAssignment","src":"3708:30:54","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3728:3:54"},{"kind":"number","nodeType":"YulLiteral","src":"3733:4:54","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3718:9:54"},"nodeType":"YulFunctionCall","src":"3718:20:54"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"3708:6:54"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":56930,"isOffset":false,"isSlot":false,"src":"3708:6:54","valueSize":1},{"declaration":56925,"isOffset":false,"isSlot":false,"src":"3632:15:54","valueSize":1},{"declaration":56927,"isOffset":false,"isSlot":false,"src":"3684:10:54","valueSize":1}],"id":56932,"nodeType":"InlineAssembly","src":"3515:233:54"}]},"documentation":{"id":56923,"nodeType":"StructuredDocumentation","src":"2917:431:54","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3362:15:54","parameters":{"id":56928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56925,"mutability":"mutable","name":"domainSeparator","nameLocation":"3386:15:54","nodeType":"VariableDeclaration","scope":56934,"src":"3378:23:54","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":56924,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3378:7:54","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":56927,"mutability":"mutable","name":"structHash","nameLocation":"3411:10:54","nodeType":"VariableDeclaration","scope":56934,"src":"3403:18:54","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":56926,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3403:7:54","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3377:45:54"},"returnParameters":{"id":56931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56930,"mutability":"mutable","name":"digest","nameLocation":"3454:6:54","nodeType":"VariableDeclaration","scope":56934,"src":"3446:14:54","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":56929,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3446:7:54","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3445:16:54"},"scope":56935,"stateMutability":"pure","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":56866,"nodeType":"StructuredDocumentation","src":"190:330:54","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"linearizedBaseContracts":[56935],"name":"MessageHashUtils","nameLocation":"529:16:54","scope":56936,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":54}